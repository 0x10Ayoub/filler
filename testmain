/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   testmain.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: akhourba <akhourba@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/04/13 13:26:45 by akhourba          #+#    #+#             */
/*   Updated: 2019/04/14 16:50:41 by akhourba         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "filler.h"
int		ft_heatmap(char **map,int lx,int ly,int v)
{
	int i;
	int j;
	i = -1;
	ft_putendl("-----------------");
	while (++i < ly)
	{
		j = -1;
		while (++j <= lx)
		{
			if (map[i][j] == '.' && 
			((j + 1 <= lx && map[i][j + 1] == '0' + v)
			|| (i + 1 < ly && map[i + 1][j]== '0' + v)
			|| (j - 1 >=0 && map[i][j - 1] == '0' + v )
			|| (i - 1 >=0 && map[i - 1][j] == '0' + v)
			|| (i - 1 >= 0 && j-1 >=0 && map[i - 1][j - 1] == '0' + v)
			|| (i + 1 < ly && j + 1 <= lx && map[i + 1][j + 1] == '0' + v)
			|| (i - 1 >= 0 && j + 1 <= lx && map[i - 1][j + 1] == '0' + v )
			|| (i + 1 < ly && j - 1 >= 0 && map[i + 1][j - 1] == '0' + v)))
			map[i][j] = '1' + v;
				ft_putchar(map[i][j]);
		}
		ft_putchar('\n');
	}
	return (0);
}
/**
 * 
*/
int		ft_scanmapx(char **map,int lx,int ly)
{
	int i;
	int j;
	i = -1;
	while (++i < ly)
	{
		j = -1;
		while (++j < lx)
		{
			if(j-1 < 0 || i - 1 < 0 || i+1 >=lx)
			{
				ft_putchar(map[i][j]);
				continue;
			}
			if (j + 1 < lx && map[i][j] == '.'
			&& (map[i][j + 1]== 'O' || map[i + 1][j]== 'O' || map[i][j-1]== 'O'
			|| map[i - 1][j]== 'O' || map[i - 1][j - 1]== 'O' || map[i+1][j+1]== 'O'
			|| map[i - 1][j + 1]== 'O' || map[i + 1][j - 1]== 'O'))
			map[i][j] = '1';
				ft_putchar(map[i][j]);
		}
		ft_putchar('\n');
	}

	ft_putendl("----------------------");
	/**********************************/
	return (0);
}

int main()
{
	char **map;
	int i=0;
	int j =0;
	map = malloc(sizeof(char *) * 11);
	while(i < 10){
		map [i] = malloc(sizeof(char) * 10);
		j = 0;
		while(j < 10)
		{
			if(i == 5 && j == 3)
			map[i][j] = 'O';
			else
			map[i][j] = '.';
			j++;
		}
		i++;
	}

	map [7][7] = 'X';
	map [7][6] = 'X';
	i = 0;
	j =0;
ft_scanmapx(map,10,10);
	i=0;
	while( i < 10){
		ft_heatmap(map,10,10,i);
		i++;
	}
	
	return (0);
}